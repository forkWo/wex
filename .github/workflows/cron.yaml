name: 更新 cs

on:
  push:
    branches:
      - wex
  workflow_dispatch:
  schedule:
    - cron: '*/55 * * * *'

jobs:
  update-spider:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: 检出代码库
        uses: actions/checkout@v3

      # Step 2: Setup Python
      - name: 设置 Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      # Step 3: Cache dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install necessary dependencies
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests jq

          #  处理可能的依赖冲突,增加日志
          python -m pip install --upgrade --force-reinstall requests jq > install_log.txt
          cat install_log.txt

      # Step 5: 获取、修改 Wex JSON 并上传
      - name: 获取、修改 Wex JSON 并上传
        run: |
          # 获取 JSON 数据
          NEW_JSON=$(curl -s https://9280.kstore.space/wex.json 2>/dev/null)

          # 如果 NEW_JSON 为空，跳过后续操作, 并记录错误日志
          if [[ -z "$NEW_JSON" ]]; then
            echo "::error::Failed to fetch new JSON from kstore. Skipping update."
            exit 1
          fi

          # 使用 jq 修改 JSON 数据并保存到 cs.json
          echo "$NEW_JSON" | jq  '.sites |= map(
            if .name == "公众号：王二小放牛娃" then .name = "推荐"
            elif .name == "影视专用┃配置中心" then .name = "配置中心"
            else .
            end
           ) | .lives = [] | .doh = [] | .sites =  del(.sites[] | select(.name == "⬇️【网盘类先扫码】⬇️"))' > cs.json

          # 上传到 Kstore
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.KSTORE_TOKEN }}" \
            -d @cs.json \
            "https://upload.kstore.dev/upload/${{ secrets.KSTORE_ID }}"