name: 更新 Spider

on:
  push:
    branches:
      - wex
  workflow_dispatch:
  schedule:
    - cron: '*/55 * * * *'  # 每55分钟执行一次

jobs:
  update-spider:
    runs-on: ubuntu-latest

    steps:
      # Step 0: Delete previous runs
      - name: 删除任务流
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          completed_runs=$(curl -s -H "Authorization: token $PAT" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs?branch=${{ github.ref_name }}&status=completed" \
          | jq -r '.workflow_runs | .[72:] | .[].id')
      
          if [ -n "$completed_runs" ]; then
          echo "$completed_runs" | xargs -n 1 -I {} curl -s -X DELETE -H "Authorization: token $PAT" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/{}"
          fi

      # Step 1: Checkout the repository
      - name: 检出代码库
        uses: actions/checkout@v2

      # Step 2: Setup Python
      - name: 设置 Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: Cache dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install necessary dependencies
      - name: 安装依赖
        run: python -m pip install requests

      # Step 5: Get and Compare Spider URL
      - name: 获取并对比 Spider URL
        id: get-compare-urls
        env:
          SPIDER_JSON: ${{ secrets.SPIDER_JSON }}
        run: |
          NEW_SPIDER_URL=$(python -c "import requests; print(requests.get('https://9280.kstore.space/wex.json').json()['spider'].strip())")
          EXISTING_SPIDER_URL=$(python -c "import requests; print(requests.get('${{ env.SPIDER_JSON }}').json()['spider'].strip())")
          
          echo "New SPIDER_URL: $NEW_SPIDER_URL"
          echo "Existing SPIDER_URL: $EXISTING_SPIDER_URL"
          
          if [ "$NEW_SPIDER_URL" = "$EXISTING_SPIDER_URL" ]; then
            echo "continue=false" >> $GITHUB_ENV
            echo "对比结果一致。停止脚本."
          else
            echo "continue=true" >> $GITHUB_ENV
            echo "SPIDER_URL=$NEW_SPIDER_URL" >> $GITHUB_ENV
            echo "对比结果不同。继续脚本."
          fi

      # Step 6: Update Spider Field and upload to Kstore
      - name: 更新 Spider 字段并上传 Kstore
        if: env.continue == 'true'
        env:
          KSTORE_TOKEN: ${{ secrets.KSTORE_TOKEN }}
          KSTORE_TOKEN2: ${{ secrets.KSTORE_TOKEN2 }}
          KSTORE_ID: ${{ secrets.KSTORE_ID }}
          WEX_JSON: ${{ secrets.WEX_JSON }}
        run: |
          response=$(curl -s ${{ env.WEX_JSON }})
          updated_data=$(echo "$response" | python -c "import sys, json; data = json.load(sys.stdin); data['spider'] = '${SPIDER_URL}'; print(json.dumps(data, ensure_ascii=False))")

          echo "$updated_data" > spider.json
          curl -F "file=@spider.json" "https://upload.kstore.dev/upload/${{ env.KSTORE_ID }}?access_token=${{ env.KSTORE_TOKEN2 }}"

          echo "$updated_data" > wex.json
          curl -F "file=@wex.json" "https://upload.kstore.dev/upload/${{ env.KSTORE_ID }}?access_token=${{ env.KSTORE_TOKEN }}"
