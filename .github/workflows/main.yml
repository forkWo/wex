name: 自动更新 Spider

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # 每小时运行一次

jobs:
  update-spider:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 初始化工作区
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: 安装依赖项
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Step 4: 获取 Spider URL 并设置环境变量
      - name: Get Spider URL
        id: get_spider_url
        run: |
          SPIDER_URL=$(python -c "import requests; print(requests.get('https://9280.kstore.space/wex.json').json()['spider'])")
          echo "SPIDER_URL=$SPIDER_URL" >> $GITHUB_ENV

      # Step 5: 比较现有 Spider URL
      - name: Compare existing Spider URL
        id: compare_urls
        env:
          SPIDER_JSON: ${{ secrets.SPIDER_JSON }}
        run: |
          EXISTING_SPIDER_URL=$(python -c "import requests; print(requests.get('${{ env.SPIDER_JSON }}').json()['spider'].strip())")
          SPIDER_URL=$(echo $SPIDER_URL | tr -d '\n' | tr -d ' ')
          EXISTING_SPIDER_URL=$(echo $EXISTING_SPIDER_URL | tr -d '\n' | tr -d ' ')
          
          if [ "$SPIDER_URL" = "$EXISTING_SPIDER_URL" ]; then
            echo "continue=false" >> $GITHUB_ENV
          else
            echo "continue=true" >> $GITHUB_ENV

      # Step 6: 更新 Spider URL 并上传 Kstore
      - name: Update Spider URL and upload to Kstore
        if: env.continue == 'true'
        env:
          KSTORE_TOKEN: ${{ secrets.KSTORE_TOKEN }}
          KSTORE_TOKEN2: ${{ secrets.KSTORE_TOKEN2 }}
          KSTORE_ID: ${{ secrets.KSTORE_ID }}
          WEX_JSON: ${{ secrets.WEX_JSON }}
        run: |
          response=$(curl -s ${{ env.WEX_JSON }})
          updated_data=$(echo "$response" | python -c "import sys, json; data = json.load(sys.stdin); data['spider'] = '${{ env.SPIDER_URL }}'; print(json.dumps(data, ensure_ascii=False))")
          echo "$updated_data" > spider.json
          curl -F "file=@spider.json" "https://upload.kstore.space/upload/${{ env.KSTORE_ID }}?access_token=${{ env.KSTORE_TOKEN2 }}"
          echo "$updated_data" > wex.json
          curl -F "file=@wex.json" "https://upload.kstore.space/upload/${{ env.KSTORE_ID }}?access_token=${{ env.KSTORE_TOKEN }}"

      # Step 7: 等待下一个预定时间（仅在 push 触发时）
      - name: Wait for the next scheduled time
        if: github.ref_name == 'refs/heads/main' && workflow.event_name != 'schedule'
        run: |
          current_time=$(date +%H:%M)
          next_run_time=$(date -d '1 hour' +%H:%M)
          wait_time=$(( (next_run_time - current_time) * 60 ))

          if [ "$current_time" == "$next_run_time" ]; then
            wait_time=60
          fi

          echo "Current time: $current_time"
          echo "Next scheduled run time: $next_run_time"
          echo "Waiting time: $wait_time minutes"

          sleep $wait_time
