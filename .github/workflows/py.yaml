name: Wex JSON Upload

on:
  push:
    branches:
      - wex
  workflow_dispatch:
  schedule:
    - cron: '*/10 * * * *'

env:
  JSON_URL: "https://9280.kstore.space/wex.json"
  FINAL_JSON: "wex.json"

jobs:
  modify:
    runs-on: ubuntu-latest
    steps:
      - name: Ê£ÄÂá∫‰ªìÂ∫ì
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ëé∑ÂèñÂÆåÊï¥Êèê‰∫§ÂéÜÂè≤

      - name: ÈÖçÁΩÆ Git ÁéØÂ¢É
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: ËÆæÁΩÆ Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: ÂÆâË£Ö‰æùËµñ
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      
      - name: ‰∏ãËΩΩ JSON Êï∞ÊçÆ
        run: curl -s --compressed "${{ env.JSON_URL }}" -o 9280.json

      - name: ÊèêÂèñÂπ∂Â§ÑÁêÜ Spider ÂÜÖÂÆπ
        id: spider
        run: |
          SPIDER_CONTENT=$(jq -r '.spider // "" | gsub("\n"; "\\n")' 9280.json)
          echo "SPIDER_CONTENT=$SPIDER_CONTENT" >> $GITHUB_ENV

      - name: Ëé∑ÂèñÂéÜÂè≤ Spider
        id: history
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          RESP=$(curl -sf -H "Authorization: Bearer $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest")

          PREVIOUS_SPIDER=$(jq -r '
            if .message == "Not Found" then
              "no_history"
            else
              (.body | split("Spider Content: ")[1] // "")
            end
          ' <<< "$RESP")

          echo "PREVIOUS_SPIDER=$PREVIOUS_SPIDER" >> $GITHUB_ENV

      - name: ÂØπÊØîÂÜÖÂÆπ
        id: comparator
        run: |
          if [[ "$SPIDER_CONTENT" != "$PREVIOUS_SPIDER" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Â§ÑÁêÜ JSON
        if: steps.comparator.outputs.changed == 'true'
        run: |
          python3 <<EOF
          import json

          # ÈÖçÁΩÆÊò†Â∞Ñ
          NAME_MAPPING = {
              "Douban": "üêÆ„ÄêÊé®Ëçê„ÄëüêÆ",
              "Wexokconfig": "üêÆÈÖçÁΩÆ‰∏≠ÂøÉüêÆ",
              "Wexnullname": "üíìËßÇÂΩ±‚îÉ4Küíì"
          }
          PRIORITY_MAP = {"Douban": 1, "Wexokconfig": 2, "Áé©ÂÅ∂": 3}
          KEYS_TO_DELETE = [
              "Doubana", #‚¨áÔ∏è„ÄêÁΩëÁõòÁ±ªÂÖàÊâ´Á†Å„Äë‚¨áÔ∏è
              "Wexconfig", #üêÆÈÄöÁî®Á±ªÂûã‚îÉÈÖçÁΩÆ‰∏≠ÂøÉüêÆ
              "Wexalllive", #üíì‚ÄçËÅöÂêà‚îÉÁõ¥Êí≠üíì
              "mingriyingshi", #üòÅÊòéÊó•‚îÉÂΩ±ËßÜüòÅ
              "Fujutv", #üòÅËÖêÂâß‚îÉÂΩ±ËßÜüòÅ
              "Wexsaohuo", #üéáÁÅ´ÁÅ´‚îÉÁßíÊí≠üéá
              "csp_Nmys", #üéá‰ºØ‰ºØ‚îÉÁßíÊí≠üéá
              "ÈùûÂá°","Êú®ËÄ≥", 
              "360", "Áà±Âù§", 
              "Êñ∞6V",
              "Wexhanxiaoquan", #üå∫Èü©Âúà‚îÉÁßíÊí≠üå∫
              "Wexduanjuquark", #üçâÁü≠Ââß‚îÉÂ§∏ÂÖãüçâ
              "Wexduanjuvop", #üçâÁü≠Ââß‚îÉÁßíÊí≠üçâ
              "Wexduanjuhema", #üçâÁü≠Ââß‚îÉ‰ªôÂìÅüçâ
              "WexduanjuvmpGuard", #üçâÁü≠Ââß‚îÉÂ∏ùÂìÅüçâ
              "WexduanjuvipGuard", #üçâÁü≠Ââß‚îÉÁ•ûÂìÅüçâ
              "Wexduanju001", #üçâÁü≠Ââß‚îÉÊûÅÂìÅüçâ
              "Wexliyuan", #üééÊàèÊõ≤‚îÉÁßíÊí≠üéé
              "Wextangdou", #üíÉË∑≥Ëàû‚îÉÊïôÂ≠¶üíÉ
              "Wexergeduoduo", #üëºÂ§öÂ§ö‚îÉÂÑøÊ≠åüëº
              "Wexbaobaobashi", #üëºÂÆùÂÆù‚îÉÂÑøÊ≠åüëº
              "Wexbeiwa", #üëºË¥ùË¥ù‚îÉÂÑøÊ≠åüëº
              "Wextuxiaobei", #üëºÂÖîÂÖî‚îÉÂÑøÊ≠åüëº
              "Pandalivetv", #üòçÈü©ÂõΩ‚îÉÁõ¥Êí≠üòç
              "Iktv", "Ëá™ÂÆö‰πâ", 
              "AList","bili",
              "biliych", #üÖ±ÂìîÂìî‚îÉÊ≠åÊõ≤üÖ±
              "Wexqingfengdj", #üéºËàûÊõ≤‚îÉÊëáÂ§¥üéº
              "Wexxsmp3", #üé§ÈöèË∫´‚îÉÁõ∏Â£∞üé§
              "Wexpsmp3", #üé§ÈöèË∫´‚îÉËØÑ‰π¶üé§
              "Wexwwe", #üåêÊ†ºÊñó‚îÉWWEüåê
              "ÁúãÁêÉ", 
              "926ÁúãÁêÉ", 
              "1Áõ¥Êí≠",
          ]

          # ËØªÂèñÂéüÂßã JSON
          with open("9280.json", "r", encoding="utf-8") as f:
              data = json.load(f)

          # Âà†Èô§È°∂Â±ÇÈîÆ
          data.pop("doh", None)
          data.pop("lives", None)

          # Â§ÑÁêÜÁ´ôÁÇπÊï∞ÊçÆ
          sites = []
          for site in data.get("sites", []):
              key = site.get("key")
              
              if key in KEYS_TO_DELETE:
                  continue
              
              # Êõ¥Êñ∞Á´ôÁÇπÂêçÁß∞
              if key in NAME_MAPPING:
                  site["name"] = NAME_MAPPING[key]
              
              sites.append(site)

          # ÊéíÂ∫èÈÄªËæë
          sites.sort(key=lambda x: PRIORITY_MAP.get(x.get("key"), 4))
          data["sites"] = sites

          # ‰øùÂ≠òÁªìÊûú
          with open("${{ env.FINAL_JSON }}", "w", encoding="utf-8") as f:
              json.dump(data, f, ensure_ascii=False, indent=2)

      - name: ‰∏ä‰º†Êñá‰ª∂
        if: steps.comparator.outputs.changed == 'true'
        run: |
          curl -sSf -o /dev/null \
            https://upload.kstore.space/upload/${{ secrets.KSTORE_ID }}?access_token=${{ secrets.KSTORE_TOKEN }} \
            -F "file=@${{ env.FINAL_JSON }}"

      - name: ÂèëÂ∏ÉÁâàÊú¨
        if: steps.comparator.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          gh release create v$(date +%s) \
            --title "$(date +%F)" \
            --notes "Spider Content: $SPIDER_CONTENT" \
            --target ${{ github.sha }}

      - name: Ê∏ÖÁêÜÂéÜÂè≤
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          RUNS=$(curl -sf -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=100")
          
          jq -r '.workflow_runs | sort_by(.run_number) | reverse | .[100:][] | .id' <<< "$RUNS" | \
            xargs -I{} curl -sf -X DELETE -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/{}"